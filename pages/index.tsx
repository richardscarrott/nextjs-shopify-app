import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { Provider } from "../components/lib/provider";
import {
  Page,
  Card,
  ResourceList,
  ResourceItem,
  TextStyle,
  Thumbnail,
  EmptyState,
  Banner,
} from "@shopify/polaris";
import { useSsr, wrapSsr } from "../utils/use-ssr";
import { requireInstall, withShop } from "../middleware/ssr";
import { ProductsApiData } from "./api/products";
import { Loading, useAppBridge } from "@shopify/app-bridge-react";
import { Redirect } from "@shopify/app-bridge/actions";
import { useApi } from "../utils/use-api";
import { useRouter } from "next/router";

interface Props {
  readonly host: string;
  readonly shop: string;
}

export const getServerSideProps: GetServerSideProps<Props> = wrapSsr(
  useSsr(requireInstall, withShop(true), (ctx, { shop, host }) => {
    return {
      props: {
        shop,
        host,
      },
    };
  })
);

const HomePage: NextPage<Props> = (props) => {
  return (
    <Provider embed host={props.host}>
      <Home {...props} />
    </Provider>
  );
};

export default HomePage;

const Home: React.FunctionComponent<Props> = ({ shop, host }) => {
  const { error, data } = useApi<ProductsApiData>({
    path: "/api/products",
    shop,
    host,
  });
  const router = useRouter();
  const app = useAppBridge();
  return (
    <>
      <Head>
        <title>Create Next Shopify App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Page title="Products">
        {error ? (
          <Banner title="Products failed to load" status="critical" />
        ) : !data ? (
          <Loading />
        ) : data.products.length ? (
          <Card sectioned>
            <ResourceList
              resourceName={{ singular: "product", plural: "products" }}
              items={data.products}
              renderItem={(item) => {
                return (
                  <ResourceItem
                    id={item.id.toString()}
                    onClick={() => {
                      router.push(
                        `/products/${item.id}?shop=${shop}&host=${host}`
                      );
                    }}
                    media={
                      item.image ? (
                        <Thumbnail
                          source={item.image.src}
                          alt={item.image.alt || "Product image"}
                        />
                      ) : undefined
                    }
                    accessibilityLabel={`View details for ${item.title}`}
                  >
                    <h3>
                      <TextStyle variation="strong">{item.title}</TextStyle>
                    </h3>
                    <div>{item.vendor}</div>
                  </ResourceItem>
                );
              }}
            />
          </Card>
        ) : (
          <EmptyState
            heading="Congratulations, you've setup and installed your very own Shopify App"
            action={{
              content: "Add products",
              onAction: () => {
                const redirect = Redirect.create(app);
                redirect.dispatch(Redirect.Action.ADMIN_PATH, "/products");
              },
            }}
            image="https://cdn.shopify.com/s/files/1/0262/4071/2726/files/emptystate-files.png"
          >
            <p>
              Add some products to your Shopify store and they'll show up here
            </p>
          </EmptyState>
        )}
      </Page>
    </>
  );
};
